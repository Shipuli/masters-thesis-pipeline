{
  "paragraphs": [
    {
      "text": "%spark.dep\n\nz.load(\"org.deeplearning4j:deeplearning4j-core:1.0.0-beta4\")\nz.load(\"org.deeplearning4j:dl4j-spark-parameterserver_2.11:1.0.0-beta4_spark_2\")\nz.load(\"org.deeplearning4j:dl4j-spark_2.11:1.0.0-beta4_spark_2\")\n\nz.load(\"org.datavec:datavec-api:1.0.0-beta4\")\nz.load(\"org.datavec:datavec-spark_2.11:1.0.0-beta4_spark_2\")\n\nz.load(\"org.nd4j:nd4j-native-platform:1.0.0-beta4\")\nz.load(\"org.nd4j:nd4j-api:1.0.0-beta4\")\n\nz.load(\"org.mlflow:mlflow-client:1.2.0\")",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:22:53.315",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res0: org.apache.zeppelin.dep.Dependency \u003d org.apache.zeppelin.dep.Dependency@6798b46e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1566988376746_833101730",
      "id": "20190828-103256_805032633",
      "dateCreated": "2019-08-28 10:32:56.746",
      "dateStarted": "2019-10-02 13:22:53.559",
      "dateFinished": "2019-10-02 13:27:21.434",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.SparkConf\r\nimport org.apache.spark.api.java.JavaRDD\r\nimport org.apache.spark.sql.functions._\r\nimport org.apache.spark.sql.expressions.Window\r\nimport org.apache.spark.sql.{Dataset, Row, SparkSession}\r\nimport org.apache.spark.api.java.function.Function\r\n\r\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\r\nimport org.deeplearning4j.nn.conf.{BackpropType, NeuralNetConfiguration}\r\nimport org.deeplearning4j.nn.conf.layers.{LSTM, RnnOutputLayer}\r\nimport org.deeplearning4j.nn.multilayer.MultiLayerNetwork\r\nimport org.deeplearning4j.nn.weights.WeightInit\r\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\r\nimport org.deeplearning4j.spark.parameterserver.training.SharedTrainingMaster\r\nimport org.deeplearning4j.spark.datavec.DataVecSequenceDataSetFunction\r\nimport org.deeplearning4j.spark.api.RDDTrainingApproach\r\nimport org.deeplearning4j.optimize.solvers.accumulation.encoding.residual.ResidualClippingPostProcessor\r\nimport org.deeplearning4j.optimize.solvers.accumulation.encoding.threshold.AdaptiveThresholdAlgorithm\r\n\r\nimport org.nd4j.evaluation.classification.Evaluation\r\nimport org.nd4j.linalg.activations.Activation\r\nimport org.nd4j.linalg.learning.config.Nadam\r\nimport org.nd4j.linalg.dataset.DataSet\r\nimport org.nd4j.linalg.factory.Nd4j\r\nimport org.nd4j.linalg.lossfunctions.LossFunctions.LossFunction\r\nimport org.nd4j.parameterserver.distributed.conf.VoidConfiguration\r\n\r\nimport org.apache.hadoop.conf.Configuration\r\nimport org.apache.hadoop.fs._\r\nimport spark.implicits._\r\n\r\nimport org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader\r\nimport org.datavec.spark.functions.SequenceRecordReaderFunction\r\n\r\nimport org.mlflow.tracking.MlflowClient",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:29:13.826",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 245.0,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.sql.{Dataset, Row, SparkSession}\nimport org.apache.spark.api.java.function.Function\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.{BackpropType, NeuralNetConfiguration}\nimport org.deeplearning4j.nn.conf.layers.{LSTM, RnnOutputLayer}\nimport org.deeplearning4j.nn.multilayer.MultiLayerNetwork\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.parameterserver.training.SharedTrainingMaster\nimport org.deeplearning4j.spark.datavec.DataVecSequenceDataSetFunction\nimport org.d..."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1566988490082_-1124447894",
      "id": "20190828-103450_1073815477",
      "dateCreated": "2019-08-28 10:34:50.082",
      "dateStarted": "2019-10-02 13:29:13.924",
      "dateFinished": "2019-10-02 13:29:26.354",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val stockFolder \u003d \"hdfs://namenode:9000/topics/stock_test/partition\u003d0\"\r\nval sparkConf \u003d new SparkConf()\r\nsparkConf.set(\"spark.hadoop.fs.defaultFS\", \"hdfs://namenode:9000\")\r\nval spark \u003d SparkSession.builder.config(\"spark.hadoop.dfs.client.use.datanode.hostname\", \"true\").config(\"spark.hadoop.dfs.datanode.https.address\", \"datanode:9864\").appName(\"Stock Analysis\").getOrCreate()\r\nprintln(sc.version)\r\nprintln(util.Properties.versionString)",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:29:31.585",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "2.4.3\nversion 2.11.12\nstockFolder: String \u003d hdfs://namenode:9000/topics/stock_test/partition\u003d0\nsparkConf: org.apache.spark.SparkConf \u003d org.apache.spark.SparkConf@7fac89b7\nspark: org.apache.spark.sql.SparkSession \u003d org.apache.spark.sql.SparkSession@32d809d2\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1566988978194_1720178175",
      "id": "20190828-104258_1119545594",
      "dateCreated": "2019-08-28 10:42:58.194",
      "dateStarted": "2019-10-02 13:29:31.675",
      "dateFinished": "2019-10-02 13:29:33.380",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val LOOK_AHEAD \u003d 5\r\nval NUM_EPOCHS \u003d 1000\r\nval LEARNING_RATE \u003d 0.002\r\nval BATCH_SIZE \u003d 70\r\nval NUM_NEURONS \u003d 15\r\nval FEATURE_SIZE \u003d 5\r\nval DROPOUT_RATE \u003d 0.65\r\nval NUM_CLASSES \u003d 2\r\nval LABEL_INDEX \u003d 5",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:29:34.035",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "LOOK_AHEAD: Int \u003d 5\nNUM_EPOCHS: Int \u003d 1000\nLEARNING_RATE: Double \u003d 0.002\nBATCH_SIZE: Int \u003d 70\nNUM_NEURONS: Int \u003d 15\nFEATURE_SIZE: Int \u003d 5\nDROPOUT_RATE: Double \u003d 0.65\nNUM_CLASSES: Int \u003d 2\nLABEL_INDEX: Int \u003d 5\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1569933792048_400210253",
      "id": "20191001-124312_1004058129",
      "dateCreated": "2019-10-01 12:43:12.048",
      "dateStarted": "2019-10-02 13:29:34.115",
      "dateFinished": "2019-10-02 13:29:34.460",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val hadoopConfig \u003d new Configuration()\r\nhadoopConfig.set(\"fs.defaultFS\", \"hdfs://namenode:9000\")\r\nval hdfs \u003d FileSystem.get(hadoopConfig)\r\n\r\ndef createDir(outputfile: String): Unit \u003d {\r\n    if (!hdfs.exists(new Path(outputfile))) {\r\n        hdfs.mkdirs(new Path(outputfile))\r\n    } else {\r\n        hdfs.delete(new Path(outputfile), true)\r\n        hdfs.mkdirs(new Path(outputfile))\r\n    }\r\n}\r\n\r\ndef preprocessData(stockLocation: String, outputdir: String, i: Int): Unit \u003d {\r\n    val loadStock \u003d spark.read.json(stockLocation)\r\n    val window \u003d Window.orderBy(\"date\")\r\n    val indexAppended \u003d loadStock.withColumn(\"index\", row_number().over(window))\r\n    val selfJoined \u003d indexAppended.as(\"d1\")\r\n        .join(\r\n        indexAppended.as(\"d2\")\r\n            .select(\"close\", \"index\")\r\n            .withColumnRenamed(\"close\", \"future\"),\r\n        $\"d1.index\" \u003d\u003d\u003d $\"d2.index\" + 5)\r\n        .select($\"d1.close\".as(\"close\"), $\"open\", $\"high\", $\"low\", $\"volume\", $\"future\")\r\n        .withColumn(\"open\", when($\"open\".isNull, 0.0).otherwise($\"open\"))\r\n        .withColumn(\"high\", when($\"high\".isNull, 0.0).otherwise($\"high\"))\r\n        .withColumn(\"low\", when($\"low\".isNull, 0.0).otherwise($\"low\"))\r\n    // Not enough datapoints\r\n    if (selfJoined.count() \u003d\u003d 0) return\r\n        \r\n    // Add labels\r\n    val trainCSV: Dataset[(Double, Double, Double, Double, Long, Int)] \u003d selfJoined.map({\r\n          case Row(close: Double, open: Double, high: Double, low: Double, volume: Long, future: Double) \u003d\u003e\r\n            (close, open, high, low, volume, (if (future \u003e close) 1 else 0))  // new DataSet(Nd4j.create(Array(close, open, high, low, volume)), Nd4j.create(Array(if (future \u003e close) 1.0 else -1.0)))\r\n        })\r\n  \r\n        // normalize TODO: DRY\r\n        val (mean_open, std_open) \u003d trainCSV.select(mean(\"_2\"), stddev(\"_2\"))\r\n          .as[(Double, Double)]\r\n          .first()\r\n        val (mean_high, std_high) \u003d trainCSV.select(mean(\"_3\"), stddev(\"_3\"))\r\n          .as[(Double, Double)]\r\n          .first()\r\n        val (mean_low, std_low) \u003d trainCSV.select(mean(\"_4\"), stddev(\"_4\"))\r\n          .as[(Double, Double)]\r\n          .first()\r\n        val (mean_close, std_close) \u003d trainCSV.select(mean(\"_1\"), stddev(\"_1\"))\r\n          .as[(Double, Double)]\r\n          .first()\r\n        val (mean_volume, std_volume) \u003d trainCSV.select(mean(\"_5\"), stddev(\"_5\"))\r\n          .as[(Double, Double)]\r\n          .first()\r\n     \r\n    val normalized \u003d trainCSV.withColumn(\"_5\", ($\"_5\" - mean_volume) / std_volume)\r\n        .withColumn(\"_1\", ($\"_1\" - mean_close) / std_close)\r\n        .withColumn(\"_2\", ($\"_2\" - mean_open) / std_open)\r\n        .withColumn(\"_3\", ($\"_3\" - mean_high) / std_high)\r\n        .withColumn(\"_4\", ($\"_4\" - mean_low) / std_low)\r\n    \r\n    val filename \u003d s\"preprocessed_$i.csv\"\r\n    val outputFileName \u003d outputdir + \"/temp_\" + filename\r\n    val mergedFileName \u003d outputdir + \"/merged_\" + filename\r\n\r\n    normalized.write\r\n          .format(\"com.databricks.spark.csv\")\r\n          .option(\"header\", \"false\")\r\n          .mode(\"overwrite\")\r\n          .save(s\"hdfs://namenode:9000$outputFileName\")\r\n    FileUtil.copyMerge(hdfs, new Path(outputFileName), hdfs, new Path(mergedFileName), true, hadoopConfig, \"\")\r\n    trainCSV.unpersist()\r\n}",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:29:36.458",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "hadoopConfig: org.apache.hadoop.conf.Configuration \u003d Configuration: core-default.xml, core-site.xml, mapred-default.xml, mapred-site.xml, yarn-default.xml, yarn-site.xml, hdfs-default.xml, hdfs-site.xml\nhdfs: org.apache.hadoop.fs.FileSystem \u003d DFS[DFSClient[clientName\u003dDFSClient_NONMAPREDUCE_1768159461_713, ugi\u003droot (auth:SIMPLE)]]\ncreateDir: (outputfile: String)Unit\npreprocessData: (stockLocation: String, outputdir: String, i: Int)Unit\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1567936911523_-1935266833",
      "id": "20190908-100151_2079696031",
      "dateCreated": "2019-09-08 10:01:51.523",
      "dateStarted": "2019-10-02 13:29:36.521",
      "dateFinished": "2019-10-02 13:29:40.868",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// CREATE FOLDERS\r\nval outputTrainDir \u003d \"/topics/stock_test/partition\u003d0/preprocessed\"\r\nval outputEvalDir \u003d \"/topics/stock_test/partition\u003d0/evaluation\"\r\ncreateDir(outputTrainDir)\r\ncreateDir(outputEvalDir)",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:29:42.849",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "outputTrainDir: String \u003d /topics/stock_test/partition\u003d0/preprocessed\noutputEvalDir: String \u003d /topics/stock_test/partition\u003d0/evaluation\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1569839485272_1762589589",
      "id": "20190930-103125_818882450",
      "dateCreated": "2019-09-30 10:31:25.272",
      "dateStarted": "2019-10-02 13:29:42.900",
      "dateFinished": "2019-10-02 13:29:43.368",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Preprocess training set\r\nfor (i \u003c- 0 until 30) {\r\n    preprocessData(stockFolder + s\"/stock_test+0+00000000${\"%02d\".format(i)}+00000000${\"%02d\".format(i)}.json\", outputTrainDir, i)\r\n}",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:29:46.686",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://d9efa84f8d31:4040/jobs/job?id\u003d0",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d1",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d2",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d3",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d4",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d5",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d6",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d7",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d8",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d9",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d10",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d11",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d12",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d13",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d14",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d15",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d16",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d17",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d18",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d19",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d20",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d21",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d22",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d23",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d24",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d25",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d26",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d27",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d28",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d29",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d30",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d31",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d32",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d33",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d34",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d35",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d36",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d37",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d38",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d39",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d40",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d41",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d42",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d43",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d44",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d45",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d46",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d47",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d48",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d49",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d50",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d51",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d52",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d53",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d54",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d55",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d56",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d57",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d58",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d59",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d60",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d61",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d62",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d63",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d64",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d65",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d66",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d67",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d68",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d69",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d70",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d71",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d72",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d73",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d74",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d75",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d76",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d77",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d78",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d79",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d80",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d81",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d82",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d83",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d84",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d85",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d86",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d87",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d88",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d89",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d90",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d91",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d92",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d93",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d94",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d95",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d96",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d97",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d98",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d99",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d100",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d101",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d102",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d103",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d104",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d105",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d106",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d107",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d108",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d109",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d110",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d111",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d112",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d113",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d114",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d115",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d116",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d117",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d118",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d119",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d120",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d121",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d122",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d123",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d124",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d125",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d126",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d127",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d128",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d129",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d130",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d131",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d132",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d133",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d134",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d135",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d136",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d137",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d138",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d139",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d140",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d141",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d142",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d143",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d144",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d145",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d146",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d147",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d148",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d149",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d150",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d151",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d152",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d153",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d154",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d155",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d156",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d157",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d158",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d159",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d160",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d161",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d162",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d163",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d164",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d165",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d166",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d167",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d168",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d169",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d170",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d171",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d172",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d173",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d174",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d175",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d176",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d177",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d178",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d179",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d180",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d181",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d182",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d183",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d184",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d185",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d186",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d187",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d188",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d189",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d190",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d191",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d192",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d193",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d194",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d195",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d196",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d197",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d198",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d199",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d200",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d201",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d202",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d203",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d204",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d205",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d206",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d207",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d208",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d209",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d210",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d211",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d212",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d213",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d214",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d215",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d216",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d217",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d218",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d219",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d220",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d221",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d222",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d223",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d224",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d225",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d226",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d227",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d228",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d229",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d230",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d231",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d232",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d233",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d234",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d235",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d236",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d237",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d238",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d239",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d240",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d241",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d242",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d243",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d244",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d245",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d246",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d247",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d248",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d249",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d250",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d251",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d252",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d253",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d254",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d255",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d256",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d257",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d258",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d259",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d260",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d261",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d262",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d263",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d264",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d265",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d266",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d267",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d268",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d269",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d270",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d271",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d272",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d273",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d274",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d275",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d276",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d277",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d278",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d279",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d280",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d281",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d282",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d283",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d284",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d285",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d286",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d287",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d288",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d289",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d290",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d291",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d292",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d293",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d294",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d295",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d296",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d297",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d298",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d299",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d300",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d301",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d302",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d303",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d304",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d305",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d306",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d307",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d308",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d309",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d310",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d311",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d312",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d313",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d314",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d315",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d316",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d317",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d318",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d319",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d320",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d321",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d322",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d323",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d324",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d325",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d326",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d327",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d328",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d329",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d330",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d331",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d332",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d333",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d334",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d335",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d336",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d337",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d338",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d339",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d340",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d341",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d342",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d343",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d344",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d345",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d346",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d347",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d348",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d349",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d350",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d351",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d352",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d353",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d354",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d355",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d356",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d357",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d358",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d359",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d360",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d361",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d362",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d363",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d364",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d365",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d366",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d367",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d368",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d369",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d370",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d371",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d372",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d373",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d374",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d375",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d376",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d377",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d378",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d379",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d380",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d381",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d382",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d383",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d384",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d385",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d386",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d387",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d388",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d389",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d390",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d391",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d392",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d393",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d394",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d395",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d396",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d397",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d398",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d399",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d400",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d401",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d402",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d403",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d404",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d405",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d406",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d407",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d408",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d409",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d410",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d411",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d412",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d413",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d414",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d415",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d416",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d417",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d418",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d419",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d420",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d421",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d422",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d423",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d424",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d425",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d426",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d427",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d428",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d429",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d430",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d431",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d432",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d433",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d434",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d435",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d436",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d437",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d438",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d439",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d440",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d441",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d442",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d443",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d444",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d445",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d446",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d447",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d448",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d449"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1569839531630_106031206",
      "id": "20190930-103211_403454786",
      "dateCreated": "2019-09-30 10:32:11.630",
      "dateStarted": "2019-10-02 13:29:46.731",
      "dateFinished": "2019-10-02 13:32:05.830",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Preprocess evaluation set\r\nfor (i \u003c- 30 until 50) {\r\n    preprocessData(stockFolder + s\"/stock_test+0+00000000${\"%02d\".format(i)}+00000000${\"%02d\".format(i)}.json\", outputEvalDir, i)\r\n}",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:32:20.452",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://d9efa84f8d31:4040/jobs/job?id\u003d450",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d451",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d452",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d453",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d454",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d455",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d456",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d457",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d458",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d459",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d460",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d461",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d462",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d463",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d464",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d465",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d466",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d467",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d468",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d469",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d470",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d471",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d472",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d473",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d474",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d475",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d476",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d477",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d478",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d479",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d480",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d481",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d482",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d483",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d484",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d485",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d486",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d487",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d488",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d489",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d490",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d491",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d492",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d493",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d494",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d495",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d496",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d497",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d498",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d499",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d500",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d501",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d502",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d503",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d504",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d505",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d506",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d507",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d508",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d509",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d510",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d511",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d512",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d513",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d514",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d515",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d516",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d517",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d518",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d519",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d520",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d521",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d522",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d523",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d524",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d525",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d526",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d527",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d528",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d529",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d530",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d531",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d532",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d533",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d534",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d535",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d536",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d537",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d538",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d539",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d540",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d541",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d542",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d543",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d544",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d545",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d546",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d547",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d548",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d549",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d550",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d551",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d552",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d553",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d554",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d555",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d556",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d557",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d558",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d559",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d560",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d561",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d562",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d563",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d564",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d565",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d566",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d567",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d568",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d569",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d570",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d571",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d572",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d573",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d574",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d575",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d576",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d577",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d578",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d579",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d580",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d581",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d582",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d583",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d584",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d585",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d586",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d587",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d588",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d589",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d590",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d591",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d592",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d593",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d594",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d595",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d596",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d597",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d598",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d599",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d600",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d601",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d602",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d603",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d604",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d605",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d606",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d607",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d608",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d609",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d610",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d611",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d612",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d613",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d614",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d615",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d616",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d617",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d618",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d619",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d620",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d621",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d622",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d623",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d624",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d625",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d626",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d627",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d628",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d629",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d630",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d631",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d632",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d633",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d634",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d635",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d636",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d637",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d638",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d639",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d640",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d641",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d642",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d643",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d644",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d645",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d646",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d647",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d648",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d649",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d650",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d651",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d652",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d653",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d654",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d655",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d656",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d657",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d658",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d659",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d660",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d661",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d662",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d663",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d664",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d665",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d666",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d667",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d668",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d669",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d670",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d671",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d672",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d673",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d674",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d675",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d676",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d677",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d678",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d679",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d680",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d681",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d682",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d683",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d684",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d685",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d686",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d687",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d688",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d689",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d690",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d691",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d692",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d693",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d694",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d695",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d696",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d697",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d698",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d699",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d700",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d701",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d702",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d703",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d704",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d705",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d706",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d707",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d708",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d709",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d710",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d711",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d712",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d713",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d714",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d715",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d716",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d717",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d718",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d719",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d720",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d721",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d722",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d723",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d724",
            "http://d9efa84f8d31:4040/jobs/job?id\u003d725"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1569839618305_27435451",
      "id": "20190930-103338_1027928145",
      "dateCreated": "2019-09-30 10:33:38.305",
      "dateStarted": "2019-10-02 13:32:20.520",
      "dateFinished": "2019-10-02 13:33:16.704",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// READY TRAINING SET\r\nval origData \u003d spark.sparkContext.binaryFiles(s\"hdfs://namenode:9000$outputTrainDir\")\r\nval numberOfHeaders \u003d 0\r\nval delimeter \u003d \",\"\r\nval seqRR \u003d new CSVSequenceRecordReader(numberOfHeaders, delimeter)\r\nval sequenceRDD \u003d origData.toJavaRDD.map(new SequenceRecordReaderFunction(seqRR))\r\nval dataSet \u003d sequenceRDD.map(new DataVecSequesparnceDataSetFunction(LABEL_INDEX, NUM_CLASSES, false))",
      "user": "anonymous",
      "dateUpdated": "2019-10-02 13:32:07.269",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "origData: org.apache.spark.rdd.RDD[(String, org.apache.spark.input.PortableDataStream)] \u003d hdfs://namenode:9000/topics/stock_test/partition\u003d0/preprocessed BinaryFileRDD[11294] at binaryFiles at \u003cconsole\u003e:109\nnumberOfHeaders: Int \u003d 0\ndelimeter: String \u003d ,\nseqRR: org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader \u003d org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader@f38ab55\nsequenceRDD: org.apache.spark.api.java.JavaRDD[java.util.List[java.util.List[org.datavec.api.writable.Writable]]] \u003d MapPartitionsRDD[11295] at map at \u003cconsole\u003e:113\ndataSet: org.apache.spark.api.java.JavaRDD[org.nd4j.linalg.dataset.DataSet] \u003d MapPartitionsRDD[11296] at map at \u003cconsole\u003e:114\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1568625807665_-597558644",
      "id": "20190916-092327_1398144177",
      "dateCreated": "2019-09-16 09:23:27.665",
      "dateStarted": "2019-10-01 13:30:26.583",
      "dateFinished": "2019-10-01 13:30:27.074",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// READY EVALUATION SET\r\nval evalData \u003d spark.sparkContext.binaryFiles(s\"hdfs://namenode:9000$outputEvalDir\")\r\nval sequenceEvalRDD \u003d evalData.toJavaRDD.map(new SequenceRecordReaderFunction(seqRR))\r\nval evalDataSet \u003d sequenceEvalRDD.map(new DataVecSequenceDataSetFunction(LABEL_INDEX, NUM_CLASSES, false))",
      "user": "anonymous",
      "dateUpdated": "2019-10-01 13:30:28.811",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "evalData: org.apache.spark.rdd.RDD[(String, org.apache.spark.input.PortableDataStream)] \u003d hdfs://namenode:9000/topics/stock_test/partition\u003d0/evaluation BinaryFileRDD[11297] at binaryFiles at \u003cconsole\u003e:108\nsequenceEvalRDD: org.apache.spark.api.java.JavaRDD[java.util.List[java.util.List[org.datavec.api.writable.Writable]]] \u003d MapPartitionsRDD[11298] at map at \u003cconsole\u003e:109\nevalDataSet: org.apache.spark.api.java.JavaRDD[org.nd4j.linalg.dataset.DataSet] \u003d MapPartitionsRDD[11299] at map at \u003cconsole\u003e:110\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1569929932307_1035668227",
      "id": "20191001-113852_1112959112",
      "dateCreated": "2019-10-01 11:38:52.307",
      "dateStarted": "2019-10-01 13:30:28.849",
      "dateFinished": "2019-10-01 13:30:29.303",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// CONFIGURE THE NETWORK\r\nval conf \u003d new NeuralNetConfiguration.Builder()\r\n        .optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT)\r\n        .dropOut(DROPOUT_RATE)\r\n        .updater(new Nadam(LEARNING_RATE))\r\n        .list()\r\n        .layer(new LSTM.Builder()\r\n          .nIn(FEATURE_SIZE)\r\n          .nOut(NUM_NEURONS)\r\n          .activation(Activation.SOFTMAX)\r\n          .build())\r\n        .layer(new RnnOutputLayer.Builder()\r\n          .nIn(NUM_NEURONS)\r\n          .nOut(2)\r\n          .weightInit(WeightInit.XAVIER)\r\n          .activation(Activation.SOFTMAX)\r\n          .lossFunction(LossFunction.MCXENT)\r\n          .build())\r\n        .backpropType(BackpropType.TruncatedBPTT)\r\n        .tBPTTLength(70)\r\n        .build()\r\n\r\nval lowLevelConf \u003d VoidConfiguration.builder()\r\n        .unicastPort(49876)  //Port that workers will use to communicate. Use any free port\r\n        .controllerAddress(\"172.24.0.15\")\r\n        .build();\r\n        \r\nval trainingMaster \u003d new SharedTrainingMaster.Builder(lowLevelConf, dataSet.count().toInt)\r\n        .batchSizePerWorker(BATCH_SIZE)\r\n        .thresholdAlgorithm(new AdaptiveThresholdAlgorithm(5))\r\n        .residualPostProcessor(new ResidualClippingPostProcessor(5, 5))\r\n        .rddTrainingApproach(RDDTrainingApproach.Direct)\r\n        .encodingDebugMode(true)\r\n        .workersPerNode(3)\r\n        .build()\r\n        \r\nval sparkNet \u003d new SparkDl4jMultiLayer(spark.sparkContext, conf, trainingMaster)",
      "user": "anonymous",
      "dateUpdated": "2019-10-01 13:30:31.004",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "conf: org.deeplearning4j.nn.conf.MultiLayerConfiguration \u003d\n{\n  \"backpropType\" : \"TruncatedBPTT\",\n  \"cacheMode\" : \"NONE\",\n  \"confs\" : [ {\n    \"cacheMode\" : \"NONE\",\n    \"dataType\" : \"FLOAT\",\n    \"epochCount\" : 0,\n    \"iterationCount\" : 0,\n    \"layer\" : {\n      \"@class\" : \"org.deeplearning4j.nn.conf.layers.LSTM\",\n      \"activationFn\" : {\n        \"@class\" : \"org.nd4j.linalg.activations.impl.ActivationSoftmax\"\n      },\n      \"biasInit\" : 0.0,\n      \"biasUpdater\" : null,\n      \"constraints\" : null,\n      \"forgetGateBiasInit\" : 1.0,\n      \"gainInit\" : 1.0,\n      \"gateActivationFn\" : {\n        \"@class\" : \"org.nd4j.linalg.activations.impl.ActivationSigmoid\"\n      },\n      \"gradientNormalization\" : \"None\",\n      \"gradientNormalizationThreshold\" : 1.0,\n      \"idropout\" : {\n        \"@class\" : \"org...."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1567859920182_-956161317",
      "id": "20190907-123840_1311856469",
      "dateCreated": "2019-09-07 12:38:40.182",
      "dateStarted": "2019-10-01 13:30:31.058",
      "dateFinished": "2019-10-01 13:30:33.018",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Initiate tracking\r\nval flowClient \u003d new MlflowClient(\"http://mlflow:5000\")\r\nval experimentName \u003d \"ONE_LAYER_LSTM_SOFTMAX_MCXENT\"\r\nval previousExperiment \u003d flowClient.getExperimentByName(experimentName)\r\nvar experiment \u003d \"\"\r\nif(previousExperiment.isPresent) {\r\n    experiment \u003d previousExperiment.get().getExperimentId\r\n} else {\r\n    experiment \u003d flowClient.createExperiment(experimentName)\r\n}\r\nval run \u003d flowClient.createRun(experiment)\r\nflowClient.logParam(run.getRunId, \"learning_rate\", LEARNING_RATE.toString)\r\nflowClient.logParam(run.getRunId, \"num_neurons\", NUM_NEURONS.toString)\r\nflowClient.logParam(run.getRunId, \"dropout_rate\", DROPOUT_RATE.toString)\r\nflowClient.logParam(run.getRunId, \"look_ahead\", LOOK_AHEAD.toString)",
      "user": "anonymous",
      "dateUpdated": "2019-10-01 13:30:35.498",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flowClient: org.mlflow.tracking.MlflowClient \u003d org.mlflow.tracking.MlflowClient@180b7e55\nexperimentName: String \u003d ONE_LAYER_LSTM_SOFTMAX_MCXENT\npreviousExperiment: java.util.Optional[org.mlflow.api.proto.Service.Experiment] \u003d\nOptional[experiment_id: \"1\"\nname: \"ONE_LAYER_LSTM_SOFTMAX_MCXENT\"\nartifact_location: \"./mlruns/1\"\nlifecycle_stage: \"active\"\n]\nexperiment: String \u003d 1\nrun: org.mlflow.api.proto.Service.RunInfo \u003d\nrun_uuid: \"cd42a32bfd0e44709eaf588ad95521bc\"\nexperiment_id: \"1\"\nuser_id: \"root\"\nstatus: RUNNING\nstart_time: 1569936635861\nartifact_uri: \"./mlruns/1/cd42a32bfd0e44709eaf588ad95521bc/artifacts\"\nlifecycle_stage: \"active\"\nrun_id: \"cd42a32bfd0e44709eaf588ad95521bc\"\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1569930092542_1645626686",
      "id": "20191001-114132_1218818332",
      "dateCreated": "2019-10-01 11:41:32.542",
      "dateStarted": "2019-10-01 13:30:35.532",
      "dateFinished": "2019-10-01 13:30:35.958",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var i \u003d 0\r\nwhile (i \u003c\u003d NUM_EPOCHS) {\r\n    sparkNet.fit(dataSet)\r\n    val evaluation: Evaluation \u003d sparkNet.evaluate(evalDataSet)\r\n    flowClient.logMetric(run.getRunId, \"accuracy\", evaluation.accuracy(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"precision\", evaluation.precision(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"recall\", evaluation.recall(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"f1\", evaluation.f1(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"false_negatives\", evaluation.getFalseNegatives().totalCount(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"false_positives\", evaluation.getFalsePositives().totalCount(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"true_negatives\", evaluation.getTrueNegatives().totalCount(), System.currentTimeMillis(), i)\r\n    flowClient.logMetric(run.getRunId, \"true_positives\", evaluation.getTruePositives().totalCount(), System.currentTimeMillis(), i)\r\n    i +\u003d 1\r\n}",
      "user": "anonymous",
      "dateUpdated": "2019-10-01 13:30:37.859",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 3066.0 failed 4 times, most recent failure: Lost task 0.3 in stage 3066.0 (TID 4176, 172.24.0.14, executor 1): java.lang.RuntimeException: Training failed due to exception in ParallelWrapper fit operation\n\tat org.deeplearning4j.spark.parameterserver.pw.SharedTrainingWrapper.run(SharedTrainingWrapper.java:552)\n\tat org.deeplearning4j.spark.parameterserver.functions.SharedFlatMapDataSetAdapter.call(SharedFlatMapDataSet.java:71)\n\tat org.deeplearning4j.spark.parameterserver.functions.SharedFlatMapDataSetAdapter.call(SharedFlatMapDataSet.java:43)\n\tat org.datavec.spark.transform.BaseFlatMapFunctionAdaptee.call(BaseFlatMapFunctionAdaptee.java:40)\n\tat org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:153)\n\tat org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:153)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:801)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:801)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:121)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.RuntimeException: java.lang.IllegalArgumentException: Unable to get linear index 1292: values is greater than length (1292)\n\tat org.deeplearning4j.optimize.solvers.accumulation.EncodedGradientsAccumulator.registerConsumers(EncodedGradientsAccumulator.java:199)\n\tat org.deeplearning4j.parallelism.ParallelWrapper.fit(ParallelWrapper.java:572)\n\tat org.deeplearning4j.spark.parameterserver.pw.SharedTrainingWrapper.run(SharedTrainingWrapper.java:455)\n\t... 25 more\nCaused by: java.lang.IllegalArgumentException: Unable to get linear index 1292: values is greater than length (1292)\n\tat org.nd4j.linalg.api.ndarray.BaseNDArray.getDouble(BaseNDArray.java:4322)\n\tat org.nd4j.linalg.api.ndarray.BaseNDArray.getPercentile(BaseNDArray.java:6313)\n\tat org.nd4j.linalg.api.ndarray.BaseNDArray.percentileNumber(BaseNDArray.java:6281)\n\tat org.deeplearning4j.optimize.solvers.accumulation.EncodingHandler.residualDebugOutputIfRequired(EncodingHandler.java:293)\n\tat org.deeplearning4j.optimize.solvers.accumulation.EncodingHandler.encodeUpdates(EncodingHandler.java:133)\n\tat org.deeplearning4j.optimize.solvers.accumulation.EncodingHandler.broadcastUpdates(EncodingHandler.java:246)\n\tat org.deeplearning4j.optimize.solvers.accumulation.EncodedGradientsAccumulator.storeUpdate(EncodedGradientsAccumulator.java:468)\n\tat org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:83)\n\tat org.deeplearning4j.optimize.Solver.optimize(Solver.java:52)\n\tat org.deeplearning4j.nn.multilayer.MultiLayerNetwork.doTruncatedBPTT(MultiLayerNetwork.java:2019)\n\tat org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fitHelper(MultiLayerNetwork.java:2223)\n\tat org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:2189)\n\tat org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:2252)\n\tat org.deeplearning4j.parallelism.trainer.DefaultTrainer.fit(DefaultTrainer.java:236)\n\tat org.deeplearning4j.parallelism.trainer.DefaultTrainer.run(DefaultTrainer.java:385)\n\t... 3 more\n\nDriver stacktrace:\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1889)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1877)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1876)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1876)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:926)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:926)\n  at scala.Option.foreach(Option.scala:257)\n  at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:926)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2110)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2059)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2048)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:737)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2061)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2158)\n  at org.apache.spark.rdd.RDD$$anonfun$fold$1.apply(RDD.scala:1098)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)\n  at org.apache.spark.rdd.RDD.fold(RDD.scala:1092)\n  at org.apache.spark.rdd.RDD$$anonfun$treeAggregate$1.apply(RDD.scala:1161)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:363)\n  at org.apache.spark.rdd.RDD.treeAggregate(RDD.scala:1137)\n  at org.apache.spark.api.java.JavaRDDLike$class.treeAggregate(JavaRDDLike.scala:439)\n  at org.apache.spark.api.java.AbstractJavaRDDLike.treeAggregate(JavaRDDLike.scala:45)\n  at org.deeplearning4j.spark.parameterserver.training.SharedTrainingMaster.processResults(SharedTrainingMaster.java:647)\n  at org.deeplearning4j.spark.parameterserver.training.SharedTrainingMaster.doIteration(SharedTrainingMaster.java:767)\n  at org.deeplearning4j.spark.parameterserver.training.SharedTrainingMaster.executeTrainingDirect(SharedTrainingMaster.java:352)\n  at org.deeplearning4j.spark.parameterserver.training.SharedTrainingMaster.executeTraining(SharedTrainingMaster.java:568)\n  at org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer.fit(SparkDl4jMultiLayer.java:261)\n  ... 59 elided\nCaused by: java.lang.RuntimeException: Training failed due to exception in ParallelWrapper fit operation\n  at org.deeplearning4j.spark.parameterserver.pw.SharedTrainingWrapper.run(SharedTrainingWrapper.java:552)\n  at org.deeplearning4j.spark.parameterserver.functions.SharedFlatMapDataSetAdapter.call(SharedFlatMapDataSet.java:71)\n  at org.deeplearning4j.spark.parameterserver.functions.SharedFlatMapDataSetAdapter.call(SharedFlatMapDataSet.java:43)\n  at org.datavec.spark.transform.BaseFlatMapFunctionAdaptee.call(BaseFlatMapFunctionAdaptee.java:40)\n  at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:153)\n  at org.apache.spark.api.java.JavaRDDLike$$anonfun$fn$4$1.apply(JavaRDDLike.scala:153)\n  at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:801)\n  at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:801)\n  at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n  at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n  at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n  at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n  at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n  at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n  at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n  at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n  at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n  at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\n  at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\n  at org.apache.spark.scheduler.Task.run(Task.scala:121)\n  at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\n  at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\n  at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\n  ... 3 more\nCaused by: java.lang.RuntimeException: java.lang.IllegalArgumentException: Unable to get linear index 1292: values is greater than length (1292)\n  at org.deeplearning4j.optimize.solvers.accumulation.EncodedGradientsAccumulator.registerConsumers(EncodedGradientsAccumulator.java:199)\n  at org.deeplearning4j.parallelism.ParallelWrapper.fit(ParallelWrapper.java:572)\n  at org.deeplearning4j.spark.parameterserver.pw.SharedTrainingWrapper.run(SharedTrainingWrapper.java:455)\n  ... 25 more\nCaused by: java.lang.IllegalArgumentException: Unable to get linear index 1292: values is greater than length (1292)\n  at org.nd4j.linalg.api.ndarray.BaseNDArray.getDouble(BaseNDArray.java:4322)\n  at org.nd4j.linalg.api.ndarray.BaseNDArray.getPercentile(BaseNDArray.java:6313)\n  at org.nd4j.linalg.api.ndarray.BaseNDArray.percentileNumber(BaseNDArray.java:6281)\n  at org.deeplearning4j.optimize.solvers.accumulation.EncodingHandler.residualDebugOutputIfRequired(EncodingHandler.java:293)\n  at org.deeplearning4j.optimize.solvers.accumulation.EncodingHandler.encodeUpdates(EncodingHandler.java:133)\n  at org.deeplearning4j.optimize.solvers.accumulation.EncodingHandler.broadcastUpdates(EncodingHandler.java:246)\n  at org.deeplearning4j.optimize.solvers.accumulation.EncodedGradientsAccumulator.storeUpdate(EncodedGradientsAccumulator.java:468)\n  at org.deeplearning4j.optimize.solvers.StochasticGradientDescent.optimize(StochasticGradientDescent.java:83)\n  at org.deeplearning4j.optimize.Solver.optimize(Solver.java:52)\n  at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.doTruncatedBPTT(MultiLayerNetwork.java:2019)\n  at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fitHelper(MultiLayerNetwork.java:2223)\n  at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:2189)\n  at org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit(MultiLayerNetwork.java:2252)\n  at org.deeplearning4j.parallelism.trainer.DefaultTrainer.fit(DefaultTrainer.java:236)\n  at org.deeplearning4j.parallelism.trainer.DefaultTrainer.run(DefaultTrainer.java:385)\n  ... 3 more\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1567323267710_-1618303059",
      "id": "20190901-073427_1670557991",
      "dateCreated": "2019-09-01 07:34:27.710",
      "dateStarted": "2019-10-01 13:30:37.904",
      "dateFinished": "2019-10-01 13:30:59.082",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val evaluation: Evaluation \u003d sparkNet.evaluate(evalDataSet)",
      "user": "anonymous",
      "dateUpdated": "2019-09-30 16:33:07.404",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "evaluation: org.nd4j.evaluation.classification.Evaluation \u003d\n\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEvaluation Metrics\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n # of classes:    2\n Accuracy:        0.4503\n Precision:       0.5525\n Recall:          0.5006\n F1 Score:        0.6200\nPrecision, recall \u0026 F1: reported for positive class (class 1 - \"1\") only\n\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dConfusion Matrix\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n     0     1\n-------------\n    38 11124 | 0 \u003d 0\n    20  9092 | 1 \u003d 1\n\nConfusion matrix format: Actual (rowClass) predicted as (columnClass) N times\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1569839712785_-915159521",
      "id": "20190930-103512_1990155620",
      "dateCreated": "2019-09-30 10:35:12.785",
      "dateStarted": "2019-09-30 16:33:07.448",
      "dateFinished": "2019-09-30 16:33:13.199",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val os \u003d new BufferedOutputStream(hdfs.create(new Path(\"/topics/stock_test/partition\u003d0/model.bin\")))\r\n      ModelSerializer.writeModel(sparkNet.getNetwork, os, true)",
      "user": "anonymous",
      "dateUpdated": "2019-10-01 11:42:29.714",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1567323276763_379959505",
      "id": "20190901-073436_1024753521",
      "dateCreated": "2019-09-01 07:34:36.763",
      "dateStarted": "2019-09-18 10:46:20.173",
      "dateFinished": "2019-09-18 10:49:08.584",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1568803516903_1962616044",
      "id": "20190918-104516_1748966018",
      "dateCreated": "2019-09-18 10:45:16.903",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "example-lstm",
  "id": "2EJTG62C3",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}